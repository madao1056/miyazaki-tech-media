---
import type { GetStaticPaths } from "astro";
import ListLayout from "@/layouts/list.astro";
import { SITE } from "@/lib/config";
import Pagination from "@/components/shared/pagination.astro";
import ArticlesList from "@/components/ArticlesList.astro";
import { getEntry } from "astro:content";

import { articlesHandler } from "@/lib/handlers/articles";

export const getStaticPaths = (async ({ paginate }) => {
  const articles = articlesHandler.allArticles();
  return paginate(articles, { pageSize: SITE.postsPerPage });
}) satisfies GetStaticPaths;

const { page } = Astro.props;
const articles = page.data;
const pathname = new URL(Astro.request.url).pathname.split("/");
const basePath = pathname[1];

const entry = await getEntry("views", "articles");

if (!entry) {
  return Astro.redirect("/404");
}

const [HEADER] = entry.data.blocks;
---

<ListLayout header={HEADER.title} entry={entry}>
  <section class="flex-1">
    <!-- 記事リストコンポーネント（並び替え機能付き） -->
    <ArticlesList articles={articles} basePath={basePath} />
  </section>
  {
    (
      <Pagination
        length={page.lastPage}
        currentUrl={page.url.current}
        currentPage={page.currentPage}
        baseUrl={`/${basePath}`}
        prevUrl={page.url.prev}
        nextUrl={page.url.next}
        lastUrl={`/${basePath}/${page.lastPage}`}
      />
    )
  }
</ListLayout>